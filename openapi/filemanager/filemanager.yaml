openapi: 3.1.0
info:
  title: UMCCR's Orcabus filemanager API
  description: |-
  contact:
    email: info@umccr.org
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
paths:
  /filemanager/findObjectByName:
    get:
      summary: Find an object in storage
      description: Finds an object stored in storage backend
      operationId: query
      requestBody:
        description: Find an object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '405':
          description: Invalid input
      security:
        - umccr_auth:
            - read:objects
  /filemanager/findObjectsBySubjectId:
    get:
      summary: Finds objects by subjectId
      description: Multiple status values can be provided with comma separated strings
      operationId: findObjectsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Query'
        '400':
          description: Invalid status value
      security:
        - umccr_auth:
            - read:objects
  /filemanager/{ObjectId}:
    get:
      summary: Find object by ObjectId
      description: Returns a single objectId
      operationId: getObjectById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
        - api_key: []
        - umccr_auth:
            - read:objects
components:
  schemas:
    Query:
      type: object
      properties:
        name:
          type: string
          example: some_object.bam
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

  requestBodies:
    Query:
      description: Object that needs to be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Query'

  securitySchemes:
    umccr_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://umccr.awsapps.com/oauth/authorize
          scopes:
            read:objects: read objects
    api_key:
      type: apiKey
      name: api_key
      in: header
