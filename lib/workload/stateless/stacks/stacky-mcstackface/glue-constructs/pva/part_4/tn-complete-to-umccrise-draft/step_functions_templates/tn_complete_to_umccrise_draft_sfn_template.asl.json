{
  "Comment": "A description of my state machine",
  "StartAt": "Move Inputs",
  "States": {
    "Move Inputs": {
      "Type": "Pass",
      "Parameters": {
        "linked_libraries.$": "$.linkedLibraries",
        "payload_data.$": "$.payload.data"
      },
      "Next": "Get Subject Item"
    },
    "Get Subject Item": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.payload_data.tags.subjectId",
          "id_type": "${__subject_table_partition_name__}"
        }
      },
      "ResultPath": "$.get_subject_item_step",
      "Next": "Subject Item In DataBase"
    },
    "Subject Item In DataBase": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.get_subject_item_step.Item",
          "IsPresent": true,
          "Comment": "Subject Item In DataBase",
          "Next": "Get Portal Run Id and Workflow Run Name"
        }
      ],
      "Default": "Not an automated library"
    },
    "Get Portal Run Id and Workflow Run Name": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "${__sfn_preamble_state_machine_arn__}",
        "Input": {}
      },
      "ResultSelector": {
        "portal_run_id.$": "$.Output.portal_run_id",
        "workflow_run_name.$": "$.Output.workflow_run_name"
      },
      "ResultPath": "$.get_portal_and_run_name_step",
      "Next": "Generate Draft Event Payload"
    },
    "Generate Draft Event Payload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${__generate_draft_event_payload_lambda_function_arn__}",
        "Payload": {
          "subject_id.$": "$.payload_data.tags.subjectId",
          "tumor_library_id.$": "$.payload_data.tags.tumorLibraryId",
          "normal_library_id.$": "$.payload_data.tags.normalLibraryId",
          "tumor_fastq_list_row_ids.$": "$.payload_data.tags.tumorFastqListRowIds",
          "normal_fastq_list_row_ids.$": "$.payload_data.tags.normalFastqListRowIds",
          "dragen_somatic_output_s3_uri.$": "$.payload_data.outputs.dragenSomaticOutputUri",
          "dragen_germline_output_s3_uri.$": "$.payload_data.outputs.dragenGermlineOutputUri"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "ResultSelector": {
        "input_event_data.$": "$.Payload.input_event_data",
        "event_tags.$": "$.Payload.event_tags"
      },
      "ResultPath": "$.generate_draft_event_payload_data_step",
      "Next": "Push UMCCRise Draft Event"
    },
    "Push UMCCRise Draft Event": {
      "Type": "Task",
      "Resource": "arn:aws:states:::events:putEvents",
      "Parameters": {
        "Entries": [
          {
            "Detail": {
              "portalRunId.$": "$.get_portal_and_run_name_step.portal_run_id",
              "timestamp.$": "$$.State.EnteredTime",
              "status": "${__output_status__}",
              "workflowName": "${__workflow_name__}",
              "workflowVersion": "${__workflow_version__}",
              "workflowRunName.$": "$.get_portal_and_run_name_step.workflow_run_name",
              "linkedLibraries.$": "$.linked_libraries",
              "payload": {
                "version": "${__payload_version__}",
                "data": {
                  "inputs.$": "$.generate_draft_event_payload_data_step.input_event_data",
                  "tags.$": "$.generate_draft_event_payload_data_step.event_tags"
                }
              }
            },
            "DetailType": "${__detail_type__}",
            "EventBusName": "${__event_bus_name__}",
            "Source": "${__event_source__}"
          }
        ]
      },
      "ResultPath": null,
      "End": true
    },
    "Not an automated library": {
      "Type": "Pass",
      "End": true
    }
  }
}
