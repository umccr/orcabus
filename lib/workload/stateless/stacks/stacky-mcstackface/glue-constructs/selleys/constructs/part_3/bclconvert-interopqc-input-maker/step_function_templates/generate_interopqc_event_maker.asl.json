{
  "Comment": "A description of my state machine",
  "StartAt": "Move inputs",
  "States": {
    "Move inputs": {
      "Type": "Pass",
      "Parameters": {
        "inputs.$": "$"
      },
      "Next": "Get event data from ref db (Local)"
    },
    "Get event data from ref db (Local)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.inputs.db_uuid",
          "id_type": "${__input_maker_type__}"
        }
      },
      "ResultSelector": {
        "event_data_input.$": "States.StringToJson($.Item.event_data_input.S)"
      },
      "ResultPath": "$.get_event_detail_payload_data_from_db_step",
      "Next": "Get Parameter Steps"
    },
    "Get Parameter Steps": {
      "Type": "Parallel",
      "Next": "Generate inputs for BCLConvert InteropQC",
      "Branches": [
        {
          "StartAt": "Get OutputUri for BCLConvert InterOp QC data",
          "States": {
            "Get OutputUri for BCLConvert InterOp QC data": {
              "Type": "Task",
              "Parameters": {
                "Name": "${__analysis_output_uri_ssm_parameter_name__}"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
              "ResultSelector": {
                "output_uri.$": "$.Parameter.Value"
              },
              "ResultPath": "$.get_output_uri_parameter_step",
              "End": true
            }
          }
        },
        {
          "StartAt": "Get Project ID and Name for BCLConvert InterOp QC data",
          "States": {
            "Get Project ID and Name for BCLConvert InterOp QC data": {
              "Type": "Task",
              "Parameters": {
                "Name": "${__icav2_project_id_and_name_ssm_parameter_name__}"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
              "ResultSelector": {
                "project.$": "States.StringToJson($.Parameter.Value)"
              },
              "ResultPath": "$.get_project_parameter_step",
              "End": true
            }
          }
        },
        {
          "StartAt": "Get LogsUri for BCLConvert InterOp QC data",
          "States": {
            "Get LogsUri for BCLConvert InterOp QC data": {
              "Type": "Task",
              "Parameters": {
                "Name": "${__analysis_logs_uri_ssm_parameter_name__}"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
              "ResultSelector": {
                "logs_uri.$": "$.Parameter.Value"
              },
              "ResultPath": "$.get_logs_uri_parameter_step",
              "End": true
            }
          }
        }
      ],
      "ResultPath": "$.get_ssm_parameters_steps",
      "ResultSelector": {
        "output_uri.$": "$.[0].get_output_uri_parameter_step.output_uri",
        "project_name.$": "$.[1].get_project_parameter_step.project.project_name",
        "project_id.$": "$.[1].get_project_parameter_step.project.project_id",
        "logs_uri.$": "$.[0].get_logs_uri_parameter_step.logs_uri"
      }
    },
    "Generate inputs for BCLConvert InteropQC": {
      "Type": "Pass",
      "Parameters": {
        "projectId.$": "$.get_ssm_parameters_steps.project_id",
        "bclconvertReportDirectory.$": "States.Format('{}Reports/', $.get_event_detail_payload_data_from_db_step.event_data_input.outputUri)",
        "interopDirectory.$": "States.Format('{}InterOp/', $.get_event_detail_payload_data_from_db_step.event_data_input.outputUri)",
        "runId.$": "$.get_event_detail_payload_data_from_db_step.event_data_input.instrumentRunId",
        "analysisOutputUri.$": "$.get_ssm_parameters_steps.output_uri",
        "icaLogsUri.$": "$.get_ssm_parameters_steps.logs_uri_prefix",
        "userTags": {
          "instrument_run_id.$": "$.get_event_detail_payload_data_from_db_step.event_data_input.instrumentRunId",
          "project_name.$": "$.get_ssm_parameters_steps.project_name"
        }
      },
      "ResultPath": "$.set_event_data_output",
      "Next": "Add event data outputs (local)"
    },
    "Add event data outputs (local)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.inputs.db_uuid",
          "id_type": "${__input_maker_type__}"
        },
        "UpdateExpression": "SET event_data_output = :event_data_output",
        "ExpressionAttributeValues": {
          ":event_data_output": {
            "S.$": "States.JsonToString($.set_event_data_output)"
          }
        }
      },
      "Next": "Wait 1 Second"
    },
    "Wait 1 Second": {
      "Type": "Wait",
      "Seconds": 1,
      "End": true
    }
  }
}