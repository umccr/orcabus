{
  "Comment": "A description of my state machine",
  "StartAt": "Get Event Data",
  "States": {
    "Get Event Data": {
      "Type": "Pass",
      "Next": "Get Libraries from Instrument Run",
      "Parameters": {
        "fastq_list_row_shower_complete_event_data.$": "$.payload.data"
      }
    },
    "Get Libraries from Instrument Run": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.fastq_list_row_shower_complete_event_data.instrumentRunId",
          "id_type": "${__instrument_run_partition_name__}"
        }
      },
      "ResultSelector": {
        "library_list.$": "$.Item.library_set.SS"
      },
      "Next": "Iterate over each library",
      "ResultPath": "$.get_libraries_step"
    },
    "Iterate over each library": {
      "Type": "Map",
      "ItemsPath": "$.get_libraries_step.library_list",
      "ItemSelector": {
        "library_id.$": "$$.Map.Item.Value",
        "instrument_run_id.$": "$.fastq_list_row_shower_complete_event_data.instrumentRunId"
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Get FastqListRowIds from Library",
        "States": {
          "Get FastqListRowIds from Library": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:getItem",
            "Parameters": {
              "TableName": "${__table_name__}",
              "Key": {
                "id.$": "$.library_id",
                "id_type": "${__library_partition_name__}"
              }
            },
            "Next": "For each FastqListRowID",
            "ResultSelector": {
              "library_id.$": "$.Item.library_id.S",
              "orcabus_id.$": "$.Item.orcabus_id.S",
              "sample_type.$": "$.Item.sample_type.S",
              "fastq_list_row_id_list.$": "$.Item.fastq_list_row_id_set.SS"
            },
            "ResultPath": "$.get_fastq_list_row_ids_step"
          },
          "For each FastqListRowID": {
            "Type": "Map",
            "ItemsPath": "$.get_fastq_list_row_ids_step.fastq_list_row_id_list",
            "ItemSelector": {
              "fastq_list_row_id.$": "$$.Map.Item.Value",
              "sample_type.$": "$.get_fastq_list_row_ids_step.sample_type",
              "library_id.$": "$.get_fastq_list_row_ids_step.library_id",
              "orcabus_id.$": "$.get_fastq_list_row_ids_step.orcabus_id",
              "instrument_run_id.$": "$.instrument_run_id"
            },
            "ItemProcessor": {
              "ProcessorConfig": {
                "Mode": "INLINE"
              },
              "StartAt": "Get Per Workflow Run Inputs",
              "States": {
                "Get Per Workflow Run Inputs": {
                  "Type": "Parallel",
                  "Next": "Link portal run id and fastq list row ids",
                  "Branches": [
                    {
                      "StartAt": "Get Fastq List Row Data",
                      "States": {
                        "Get Fastq List Row Data": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:getItem",
                          "Parameters": {
                            "TableName": "${__table_name__}",
                            "Key": {
                              "id.$": "$.fastq_list_row_id",
                              "id_type": "${__fastq_list_row_partition_name__}"
                            }
                          },
                          "ResultSelector": {
                            "fastq_list_row.$": "States.StringToJson($.Item.fastq_list_row_json.S)"
                          },
                          "ResultPath": "$.get_fastq_list_row_step",
                          "Next": "Generate Wgts Draft Event Data"
                        },
                        "Generate Wgts Draft Event Data": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::lambda:invoke",
                          "Parameters": {
                            "FunctionName": "${__generate_wgts_draft_event_data_lambda_function_arn__}",
                            "Payload": {
                              "library_id.$": "$.library_id",
                              "sample_type.$": "$.sample_type",
                              "fastq_list_row.$": "$.get_fastq_list_row_step.fastq_list_row",
                              "fastq_list_row_id.$": "$.fastq_list_row_id",
                              "instrument_run_id.$": "$.instrument_run_id"
                            }
                          },
                          "Retry": [
                            {
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException",
                                "Lambda.TooManyRequestsException"
                              ],
                              "IntervalSeconds": 1,
                              "MaxAttempts": 3,
                              "BackoffRate": 2
                            }
                          ],
                          "ResultPath": "$.generate_event_data_step",
                          "ResultSelector": {
                            "event_tags.$": "$.Payload.event_tags",
                            "event_data.$": "$.Payload.event_output_dict"
                          },
                          "End": true
                        }
                      }
                    },
                    {
                      "StartAt": "Get Portal Run ID and Workflow Run Name",
                      "States": {
                        "Get Portal Run ID and Workflow Run Name": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::states:startExecution.sync:2",
                          "Parameters": {
                            "StateMachineArn": "${__sfn_preamble_state_machine_arn__}",
                            "Input": {}
                          },
                          "ResultPath": "$.get_sfn_preamble_outputs_step",
                          "ResultSelector": {
                            "portal_run_id.$": "$.Output.portal_run_id",
                            "workflow_run_name.$": "$.Output.workflow_run_name"
                          },
                          "End": true
                        }
                      }
                    }
                  ],
                  "ResultPath": "$.get_per_workflow_run_inputs_step",
                  "ResultSelector": {
                    "event_data.$": "$.[0].generate_event_data_step.event_data",
                    "event_tags.$": "$.[0].generate_event_data_step.event_tags",
                    "portal_run_id.$": "$.[1].get_sfn_preamble_outputs_step.portal_run_id",
                    "workflow_run_name.$": "$.[1].get_sfn_preamble_outputs_step.workflow_run_name"
                  }
                },
                "Link portal run id and fastq list row ids": {
                  "Type": "Parallel",
                  "Next": "Wait 1 Second",
                  "Branches": [
                    {
                      "StartAt": "Link fastq list row id to portal run name",
                      "States": {
                        "Link fastq list row id to portal run name": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:updateItem",
                          "Parameters": {
                            "TableName": "${__table_name__}",
                            "Key": {
                              "id.$": "$.fastq_list_row_id",
                              "id_type": "${__fastq_list_row_partition_name__}"
                            },
                            "UpdateExpression": "SET portal_run_id = :portal_run_id",
                            "ExpressionAttributeValues": {
                              ":portal_run_id": {
                                "S.$": "$.get_per_workflow_run_inputs_step.portal_run_id"
                              }
                            }
                          },
                          "ResultPath": null,
                          "End": true
                        }
                      }
                    },
                    {
                      "StartAt": "Portal Run Name to Fastq List Row ID",
                      "States": {
                        "Portal Run Name to Fastq List Row ID": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:putItem",
                          "Parameters": {
                            "TableName": "${__table_name__}",
                            "Item": {
                              "id.$": "$.get_per_workflow_run_inputs_step.portal_run_id",
                              "id_type": "${__portal_run_partition_name__}",
                              "fastq_list_row_id": {
                                "S.$": "$.fastq_list_row_id"
                              }
                            }
                          },
                          "ResultPath": null,
                          "End": true
                        }
                      }
                    }
                  ],
                  "ResultPath": null
                },
                "Wait 1 Second": {
                  "Type": "Wait",
                  "Seconds": 1,
                  "Next": "Push wgts draft event"
                },
                "Push wgts draft event": {
                  "Type": "Task",
                  "Resource": "arn:aws:states:::events:putEvents",
                  "Parameters": {
                    "Entries": [
                      {
                        "Detail": {
                          "portalRunId.$": "$.get_per_workflow_run_inputs_step.portal_run_id",
                          "timestamp.$": "$$.State.EnteredTime",
                          "status": "${__output_status__}",
                          "workflowName": "${__workflow_name__}",
                          "workflowVersion": "${__workflow_version__}",
                          "linkedLibraries": [
                            {
                              "libraryId.$": "$.get_fastq_list_row_ids_step.library_id",
                              "orcabusId.$": "$.get_fastq_list_row_ids_step.orcabus_id"
                            }
                          ],
                          "payload": {
                            "version": "${__payload_version__}",
                            "data": {
                              "inputs.$": "$.get_per_workflow_run_inputs_step.event_data",
                              "tags.$": "$.get_per_workflow_run_inputs_step.event_tags"
                            }
                          }
                        },
                        "DetailType": "${__detail_type__}",
                        "EventBusName": "${__event_bus_name__}",
                        "Source": "${__event_source__}"
                      }
                    ]
                  },
                  "End": true
                }
              }
            },
            "ResultPath": "$.get_fastq_list_row_values_step",
            "End": true
          }
        }
      },
      "End": true
    }
  }
}
