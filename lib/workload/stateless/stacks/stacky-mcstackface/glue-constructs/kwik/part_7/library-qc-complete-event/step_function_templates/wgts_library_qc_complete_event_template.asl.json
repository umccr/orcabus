{
  "Comment": "A description of my state machine",
  "StartAt": "Get Library ID from RGID",
  "States": {
    "Get Library ID from RGID": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "MyDynamoDBTable",
        "Key": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "Get Library Info"
    },
    "Get Library Info": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "MyDynamoDBTable",
        "Key": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "Get RGIDs for Library ID"
    },
    "Get RGIDs for Library ID": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Get RGID Row",
        "States": {
          "Get RGID Row": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:getItem",
            "Parameters": {
              "TableName": "MyDynamoDBTable",
              "Key": {
                "Column": {
                  "S": "MyEntry"
                }
              }
            },
            "End": true
          }
        }
      },
      "Next": "Get Coverages for each RGID"
    },
    "Get Coverages for each RGID": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "Update Library Coverages"
    },
    "Update Library Coverages": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "MyDynamoDBTable",
        "Item": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "Wait 1 Second"
    },
    "Wait 1 Second": {
      "Type": "Wait",
      "Seconds": 1,
      "Next": "Raise LibraryQC Complete Event"
    },
    "Raise LibraryQC Complete Event": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Push Library QC Complete Event"
        }
      ],
      "Default": "Pass"
    },
    "Push Library QC Complete Event": {
      "Type": "Task",
      "Resource": "arn:aws:states:::events:putEvents.waitForTaskToken",
      "Parameters": {
        "Entries": [
          {
            "Detail": {
              "Message": "Hello from Step Functions!",
              "TaskToken.$": "$$.Task.Token"
            },
            "DetailType": "MyDetailType",
            "EventBusName": "MyEventBusName",
            "Source": "MySource"
          }
        ]
      },
      "End": true
    },
    "Pass": {
      "Type": "Pass",
      "End": true
    }
  }
}
