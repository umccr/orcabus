{
  "Comment": "A description of my state machine",
  "StartAt": "Move Inputs",
  "States": {
    "Move Inputs": {
      "Type": "Pass",
      "Parameters": {
        "workflow_inputs.$": "$"
      },
      "Next": "Tumor Library in DB"
    },
    "Tumor Library in DB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "States.ArrayGetItem($.workflow_inputs.linkedLibraries[?(@.libraryId==$.workflow_inputs.payload.data.tags.tumorLibraryId)].orcabusId, 0)",
          "id_type": "${__library_partition_name__}"
        }
      },
      "ResultPath": "$.get_tumor_library_db_step",
      "Next": "Check Tumor Library In DB"
    },
    "Check Tumor Library In DB": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.get_tumor_library_db_step.Item",
          "IsPresent": true,
          "Comment": "Library In Database",
          "Next": "Get Workflow Parameters"
        }
      ],
      "Default": "Not an Automated Batch Workflow"
    },
    "Get Workflow Parameters": {
      "Type": "Parallel",
      "Next": "Generate Sash Ready Event",
      "Branches": [
        {
          "StartAt": "Generate Sash Payload",
          "States": {
            "Generate Sash Payload": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${__generate_sash_payload_lambda_function_arn__}",
                "Payload": {
                  "tumor_library_id.$": "$.workflow_inputs.payload.data.tags.tumorLibraryId",
                  "normal_library_id.$": "$.workflow_inputs.payload.data.tags.normalLibraryId",
                  "subject_id.$": "$.workflow_inputs.payload.data.tags.subjectId",
                  "individual_id.$": "$.workflow_inputs.payload.data.tags.individualId",
                  "dragen_somatic_output_s3_uri.$": "$.workflow_inputs.payload.data.tags.dragenSomaticOutputS3Uri",
                  "dragen_germline_output_s3_uri.$": "$.workflow_inputs.payload.data.tags.dragenGermlineOutputS3Uri",
                  "oncoanalyser_dna_s3_uri.$": "$.workflow_inputs.payload.data.outputs.dnaOncoanalyserAnalysisUri"
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException",
                    "States.TaskFailed"
                  ],
                  "IntervalSeconds": 60,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "ResultSelector": {
                "input_event_data.$": "$.Payload.input_event_data",
                "event_tags.$": "$.Payload.event_tags"
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Get Portal Run ID and Workflow Run Name",
          "States": {
            "Get Portal Run ID and Workflow Run Name": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${__sfn_preamble_state_machine_arn__}",
                "Input": {}
              },
              "ResultSelector": {
                "portal_run_id.$": "$.Output.portal_run_id",
                "workflow_run_name.$": "$.Output.workflow_run_name"
              },
              "End": true
            }
          }
        }
      ],
      "ResultSelector": {
        "input_event_data.$": "$.[0].input_event_data",
        "event_tags.$": "$.[0].event_tags",
        "portal_run_id.$": "$.[1].portal_run_id",
        "workflow_run_name.$": "$.[1].workflow_run_name"
      },
      "ResultPath": "$.get_parameters_step"
    },
    "Generate Sash Ready Event": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "${__launch_ready_event_sfn_arn__}",
        "Input": {
          "StatePayload": {
            "portal_run_id.$": "$.get_parameters_step.portal_run_id",
            "workflow_run_name.$": "$.get_parameters_step.workflow_run_name",
            "linked_libraries.$": "$.workflow_inputs.linkedLibraries",
            "data_inputs.$": "$.get_parameters_step.input_event_data",
            "data_tags.$": "$.get_parameters_step.event_tags"
          }
        }
      },
      "End": true
    },
    "Not an Automated Batch Workflow": {
      "Type": "Pass",
      "End": true
    }
  }
}
