{
  "Comment": "A description of my state machine",
  "StartAt": "Save event (local)",
  "States": {
    "Save event (local)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "MyDynamoDBTable",
        "Item": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "Translate Event"
    },
    "Translate Event": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "Get SampleSheet from Run ID"
    },
    "Get SampleSheet from Run ID": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "MyDynamoDBTable",
        "Key": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "Is Tso500 Data Section in SampleSheet"
    },
    "Is Tso500 Data Section in SampleSheet": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Success"
        }
      ],
      "Default": "Get library id set"
    },
    "Get library id set": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "For each library"
    },
    "Success": {
      "Type": "Succeed"
    },
    "For each library": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Collect samplesheet and fastq list row",
        "States": {
          "Collect samplesheet and fastq list row": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 3,
                "BackoffRate": 2
              }
            ],
            "Next": "save event"
          },
          "save event": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
              "TableName": "MyDynamoDBTable",
              "Item": {
                "Column": {
                  "S": "MyEntry"
                }
              }
            },
            "Next": "cttso ready event"
          },
          "cttso ready event": {
            "Type": "Task",
            "Resource": "arn:aws:states:::events:putEvents.waitForTaskToken",
            "Parameters": {
              "Entries": [
                {
                  "Detail": {
                    "Message": "Hello from Step Functions!",
                    "TaskToken.$": "$$.Task.Token"
                  },
                  "DetailType": "MyDetailType",
                  "EventBusName": "MyEventBusName",
                  "Source": "MySource"
                }
              ]
            },
            "End": true
          }
        }
      },
      "End": true
    }
  }
}