{
  "Comment": "Get CWL Outputs from BCLConvert InterOp QC pipeline",
  "StartAt": "Get DB Attributes",
  "States": {
    "Get DB Attributes": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.portal_run_id",
          "id_type": "portal_run_id"
        }
      },
      "ResultSelector": {
        "ready_event_data_inputs.$": "States.StringToJson($.Item.ready_event_data_inputs.S)",
        "analysis_output_uri.$": "$.Item.analysis_output_uri.S"
      },
      "ResultPath": "$.get_db_attributes_step",
      "Next": "Set outputs from analysis uri"
    },
    "Set outputs from analysis uri": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${__set_outputs_json_lambda_function_arn__}",
        "Payload": {
          "portal_run_id.$": "$.portal_run_id",
          "analysis_output_uri.$": "$.get_db_attributes_step.analysis_output_uri"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "TimeoutSeconds": 60,
      "ResultSelector": {
        "output_json": {
          "instrumentRunOraOutputUri.$": "$.Payload.instrument_run_ora_output_uri"
        }
      },
      "ResultPath": "$.analysis_outputs_step",
      "Next": "Update analysisOutput column in DB"
    },
    "Update analysisOutput column in DB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${__table_name__}",
        "Key": {
          "id.$": "$.portal_run_id",
          "id_type": "portal_run_id"
        },
        "UpdateExpression": "SET analysis_output = :output_json",
        "ExpressionAttributeValues": {
          ":output_json": {
            "S.$": "States.JsonToString($.analysis_outputs_step.output_json)"
          }
        }
      },
      "ResultPath": "$.update_entry_post_launch_step",
      "Next": "Merge File Sizes for Fastq List Rows"
    },
    "Merge File Sizes for Fastq List Rows": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {
          "output_dir_uri.$": "$.analysis_outputs_step.output_json.instrumentRunOraOutputUri",
          "convert_to_icav2_uri": true
        },
        "FunctionName": "${__merge_file_sizes_for_fastq_list_rows_lambda_function_arn__}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "ResultSelector": {
        "fastq_list_events_map.$": "$.Payload"
      },
      "ResultPath": "$.merge_file_sizes_step",
      "Next": "Validate Fastq Outputs"
    },
    "Validate Fastq Outputs": {
      "Type": "Map",
      "ItemsPath": "$.merge_file_sizes_step.fastq_list_events_map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Step Functions StartExecution",
        "States": {
          "Step Functions StartExecution": {
            "Type": "Task",
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Parameters": {
              "StateMachineArn": "${__ora_validation_sfn_arn__}",
              "Input": {
                "read1OraFileUri.$": "$.read1FileUri",
                "read2OraFileUri.$": "$.read2FileUri",
                "read1RawMd5sum.$": "$.read1FileRawMd5sum",
                "read2RawMd5sum.$": "$.read2FileRawMd5sum",
                "validationOnly": true
              }
            },
            "End": true
          }
        }
      },
      "Next": "Wait 1 Second (Post-update)"
    },
    "Wait 1 Second (Post-update)": {
      "Type": "Wait",
      "Seconds": 1,
      "Comment": "Wait for databases to sync before continuing",
      "End": true
    }
  }
}
