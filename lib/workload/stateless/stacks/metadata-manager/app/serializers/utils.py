

def to_camel_case_key_dict(data: dict) -> dict:
    """
    Convert dictionary keys from snake_case to camelCase.
    """

    def snake_to_camel(word):
        components = word.split('_')
        # We capitalize the first letter of each component except the first one
        # with the 'title' method and join them together.
        return components[0] + ''.join(x.title() for x in components[1:])

    new_data = {}
    for key, value in data.items():
        new_key = snake_to_camel(key)
        new_data[new_key] = value
    return new_data


class OrcabusIdSerializerMetaMixin:
    """
    Do note that the use of default values in the `orcabus_id`, the OpenAPI schema generated by drf-spectacular
    will not mark the field as required, even if it is a primary key or has `blank=False` or `null=False`.
    To ensure the schema is correct, extend the Meta class serializer and mark the field as read_only in `extra_kwargs`.

    Ref:
        - https://www.django-rest-framework.org/api-guide/fields/#read_only
        - https://github.com/tfranzel/drf-spectacular/issues/1299#issuecomment-2599856679
    """
    extra_kwargs = {"orcabus_id": {"read_only": True}}
