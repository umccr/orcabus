include:
  - path:
      - ./shared/mock-db.yml

services:

  # PORT 8100 ~ metadata-manager
  metadata-manager:
    environment:
      - DB_HOSTNAME=db
      - DB_PORT=5432
      - PYTHONUNBUFFERED=1
    ports:
      - '8100:8000'
    build:
      context: ./lib/workload/stateless/stacks/metadata-manager
      dockerfile: Dockerfile
    depends_on:
      - db
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://localhost:8000/api/v1"
      start_period: 30s
      interval: 10s
      timeout: 2s
      retries: 5

  # PORT 8200 ~ workflow-manager
  workflow-manager:
    environment:
      - DB_HOSTNAME=db
      - DB_PORT=5432
      - PYTHONUNBUFFERED=1
    ports:
      - '8200:8000'
    build:
      context: ./lib/workload/stateless/stacks/workflow-manager
      dockerfile: Dockerfile
    depends_on:
      - db
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://localhost:8000/api/v1"
      start_period: 30s
      interval: 10s
      timeout: 2s
      retries: 5

  # PORT 8300 ~ sequence-run-manager
  sequence-run-manager:
    environment:
      - DB_HOSTNAME=db
      - DB_PORT=5432
      - PYTHONUNBUFFERED=1
    ports:
      - '8300:8000'
    build:
      context: ./lib/workload/stateless/stacks/sequence-run-manager
      dockerfile: Dockerfile
    depends_on:
      - db
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://localhost:8000/api/v1"
      start_period: 30s
      interval: 10s
      timeout: 2s
      retries: 5

  # PORT 8400 ~ filemanager
  filemanager:
    environment:
      # Container database address for running server inside a docker container.
      - DATABASE_URL=postgresql://orcabus:orcabus@db:5432/filemanager
      - RUST_LOG=debug
      - FILEMANAGER_API_CORS_ALLOW_ORIGINS=${FILEMANAGER_API_CORS_ALLOW_ORIGINS:-http://localhost:8400}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-access_key_id}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-secret_access_key}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-ap-southeast-2}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:-session_token}
    ports:
      - '8400:8000'
    build:
      context: ./lib/workload/stateless/stacks/filemanager
      dockerfile: Dockerfile
      args:
        # The build itself needs access to the database.
        DATABASE_URL: postgresql://orcabus:orcabus@host.docker.internal:5432/filemanager # pragma: allowlist secret
    depends_on:
      - db
    healthcheck:
      test: "curl http://localhost:8000/api/v1/s3_objects/count"
      start_period: 30s
      interval: 10s
      timeout: 2s
      retries: 5
